{"ast":null,"code":"var _jsxFileName = \"F:\\\\webtest\\\\trade-activity-app\\\\src\\\\pages\\\\Test1.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test1 = () => {\n  _s();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Test me\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 12\n  }, this);\n  const [data, setData] = useState([]);\n  const [lastFetchTime, setLastFetchTime] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [inputAddress, setInputAddress] = useState('0x40988180c9cc5e7d0ac4e8055545b76a4470fe14'); // Default address\n  const [totalProfit, setTotalProfit] = useState(0); // New state for total profit\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true); // Set loading state\n      try {\n        var _jsonData$;\n        const response = await fetch(`https://api.vela.exchange/graph/trade_activities/42161/${inputAddress}`);\n        const jsonData = await response.json();\n        if (lastFetchTime === null || ((_jsonData$ = jsonData[0]) === null || _jsonData$ === void 0 ? void 0 : _jsonData$.createdAt) < lastFetchTime) {\n          var _jsonData$2;\n          setData(jsonData);\n          setLastFetchTime((_jsonData$2 = jsonData[0]) === null || _jsonData$2 === void 0 ? void 0 : _jsonData$2.createdAt);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false); // Clear loading state\n      }\n    }\n\n    fetchData();\n  }, [inputAddress, lastFetchTime]); // Only inputAddress and lastFetchTime\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true); // Set loading state\n      try {\n        var _jsonData$3;\n        const apiUrl = `https://api.vela.exchange/graph/trade_activities/42161/${encodeURIComponent(inputAddress)}/`;\n        console.log('API URL:', apiUrl);\n        const response = await fetch(apiUrl);\n        const jsonData = await response.json();\n        console.log('Fetched Data:', jsonData);\n        if (lastFetchTime === null || ((_jsonData$3 = jsonData[0]) === null || _jsonData$3 === void 0 ? void 0 : _jsonData$3.createdAt) > lastFetchTime) {\n          var _jsonData$4;\n          setData(jsonData);\n          setLastFetchTime((_jsonData$4 = jsonData[0]) === null || _jsonData$4 === void 0 ? void 0 : _jsonData$4.createdAt);\n        }\n\n        // Calculate total profit\n        const calculatedTotalProfit = data.reduce((total, activity) => {\n          return total + parseFloat(activity.profitLoss);\n        }, 0);\n        setTotalProfit(calculatedTotalProfit);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false); // Clear loading state\n      }\n    }\n\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // Every 30 seconds\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [data, inputAddress, lastFetchTime]);\n  const tokenLookup = {\n    1: 'BTC/USD',\n    2: 'ETH/USD',\n    3: 'LTC/USD',\n    4: 'ADA/USD',\n    5: 'DOGE/USD',\n    6: 'SHIB/USD',\n    7: 'ARB/USD',\n    8: 'SOL/USD',\n    9: 'MATIC/USD',\n    10: 'AVAX/USD',\n    11: 'GBP/USD',\n    12: 'EUR/USD',\n    13: 'USD/JPY',\n    14: 'AUD/USD',\n    15: 'USD/CAD',\n    24: 'XAG/USD',\n    25: 'XAU/USD',\n    26: 'USD/CNH',\n    27: 'USD/CHF',\n    28: 'USD/MXN',\n    30: 'USDT/USD',\n    31: 'ATOM/USD',\n    32: 'DOT/USD',\n    33: 'BNB/USD',\n    34: 'PEPE/USD',\n    35: 'XRP/USD',\n    36: 'CRV/USD',\n    38: 'OP/USD'\n    // Add more entries as needed\n  };\n\n  const formatCurrency = (value, decimalPlaces) => {\n    const uintValue = value; // Assuming value is a string representing the UINT value\n    const decimals = 1e18; // This is the scale of the UINT values in your data\n    const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\n\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: decimalPlaces,\n      maximumFractionDigits: decimalPlaces\n    }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\n  };\n\n  const toTitleCase = str => {\n    return str.split('_').map(word => word.charAt(0) + word.slice(1).toLowerCase()).join(' ');\n  };\n  const handleAddressChange = event => {\n    setInputAddress(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/logo.svg`,\n          alt: \"React Logo\",\n          className: `logo ${isLoading ? 'spin' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trade Activities - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"address-input\",\n        type: \"text\",\n        value: inputAddress,\n        onChange: handleAddressChange,\n        placeholder: \"Enter an address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-profit\",\n        children: [\"Total Profit: \", formatCurrency(totalProfit, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: `table ${isLoading ? 'hidden' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Token ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Collateral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Funding Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Borrow Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Win\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mark Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pos ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Profit Loss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Trade Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: toTitleCase(entry.actionType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.averagePrice, 6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tokenLookup[parseInt(entry.tokenId)]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.collateral, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(entry.createdAt * 1000).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.positionFee, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.fundingFee, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.borrowFee, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.isLong.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.isWin.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.isPlus.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.markPrice, 6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.posId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.positionType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.profitLoss, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.tradeVolume, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 7\n  }, this);\n};\n_s(Test1, \"1nG8b31dKYtzsfeUVERLOpmIhpk=\");\n_c = Test1;\nexport default Test1;\nvar _c;\n$RefreshReg$(_c, \"Test1\");","map":{"version":3,"names":["Test1","_s","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","data","setData","useState","lastFetchTime","setLastFetchTime","isLoading","setIsLoading","inputAddress","setInputAddress","totalProfit","setTotalProfit","useEffect","fetchData","_jsonData$","response","fetch","jsonData","json","createdAt","_jsonData$2","error","console","_jsonData$3","apiUrl","encodeURIComponent","log","_jsonData$4","calculatedTotalProfit","reduce","total","activity","parseFloat","profitLoss","interval","setInterval","clearInterval","tokenLookup","formatCurrency","value","decimalPlaces","uintValue","decimals","decimalValue","Number","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","toTitleCase","str","split","map","word","charAt","slice","toLowerCase","join","handleAddressChange","event","target","className","src","process","env","PUBLIC_URL","alt","type","onChange","placeholder","entry","index","actionType","averagePrice","parseInt","tokenId","collateral","Date","toLocaleString","positionFee","fundingFee","borrowFee","isLong","toString","isWin","isPlus","markPrice","posId","positionType","tradeVolume","_c","$RefreshReg$"],"sources":["F:/webtest/trade-activity-app/src/pages/Test1.js"],"sourcesContent":["const Test1 = () => {\r\n    return <h1>Test me</h1>;\r\n    const [data, setData] = useState([]);\r\n    const [lastFetchTime, setLastFetchTime] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [inputAddress, setInputAddress] = useState('0x40988180c9cc5e7d0ac4e8055545b76a4470fe14'); // Default address\r\n    const [totalProfit, setTotalProfit] = useState(0); // New state for total profit\r\n    \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        setIsLoading(true); // Set loading state\r\n        try {\r\n          const response = await fetch(\r\n            `https://api.vela.exchange/graph/trade_activities/42161/${inputAddress}`\r\n          );\r\n          const jsonData = await response.json();\r\n  \r\n          if (lastFetchTime === null || jsonData[0]?.createdAt < lastFetchTime) {\r\n            setData(jsonData);\r\n            setLastFetchTime(jsonData[0]?.createdAt);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        } finally {\r\n          setIsLoading(false); // Clear loading state\r\n        }\r\n      }\r\n  \r\n      fetchData();\r\n    }, [inputAddress, lastFetchTime]); // Only inputAddress and lastFetchTime\r\n    \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        setIsLoading(true); // Set loading state\r\n        try {\r\n          const apiUrl = `https://api.vela.exchange/graph/trade_activities/42161/${encodeURIComponent(inputAddress)}/`;\r\n          console.log('API URL:', apiUrl);\r\n      \r\n          const response = await fetch(apiUrl);\r\n          const jsonData = await response.json();\r\n          console.log('Fetched Data:', jsonData);\r\n      \r\n          if (lastFetchTime === null || jsonData[0]?.createdAt > lastFetchTime) {\r\n            setData(jsonData);\r\n            setLastFetchTime(jsonData[0]?.createdAt);\r\n          }\r\n  \r\n        \r\n          // Calculate total profit\r\n          const calculatedTotalProfit = data.reduce((total, activity) => {\r\n            return total + parseFloat(activity.profitLoss);\r\n          }, 0);\r\n          setTotalProfit(calculatedTotalProfit);\r\n  \r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        } finally {\r\n          setIsLoading(false); // Clear loading state\r\n        }\r\n      }\r\n  \r\n      fetchData();\r\n      const interval = setInterval(fetchData, 30000); // Every 30 seconds\r\n  \r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }, [data, inputAddress, lastFetchTime]);\r\n  \r\n    const tokenLookup = {\r\n      1: 'BTC/USD',\r\n      2: 'ETH/USD',\r\n      3: 'LTC/USD',\r\n      4: 'ADA/USD',\r\n      5: 'DOGE/USD',\r\n      6: 'SHIB/USD',\r\n      7: 'ARB/USD',\r\n      8: 'SOL/USD',\r\n      9: 'MATIC/USD',\r\n      10: 'AVAX/USD',\r\n      11: 'GBP/USD',\r\n      12: 'EUR/USD',\r\n      13: 'USD/JPY',\r\n      14: 'AUD/USD',\r\n      15: 'USD/CAD',\r\n      24: 'XAG/USD',\r\n      25: 'XAU/USD',\r\n      26: 'USD/CNH',\r\n      27: 'USD/CHF',\r\n      28: 'USD/MXN',\r\n      30: 'USDT/USD',\r\n      31: 'ATOM/USD',\r\n      32: 'DOT/USD',\r\n      33: 'BNB/USD',\r\n      34: 'PEPE/USD',\r\n      35: 'XRP/USD',\r\n      36: 'CRV/USD',\r\n      38: 'OP/USD',\r\n      // Add more entries as needed\r\n    };\r\n  \r\n      const formatCurrency = (value, decimalPlaces) => {\r\n      const uintValue = value; // Assuming value is a string representing the UINT value\r\n      const decimals = 1e18; // This is the scale of the UINT values in your data\r\n      const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\r\n      \r\n      return new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: decimalPlaces,\r\n        maximumFractionDigits: decimalPlaces,\r\n      }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\r\n    };\r\n  \r\n    const toTitleCase = (str) => {\r\n      return str\r\n        .split('_')\r\n        .map((word) => word.charAt(0) + word.slice(1).toLowerCase())\r\n        .join(' ');\r\n    };\r\n  \r\n    const handleAddressChange = (event) => {\r\n      setInputAddress(event.target.value);\r\n    };\r\n   \r\n  \r\n    return (\r\n      <div className=\"App\">\r\n       \r\n        <div className=\"header\">\r\n        \r\n        <div className=\"logo-container\">\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/logo.svg`}\r\n            alt=\"React Logo\"\r\n            className={`logo ${isLoading ? 'spin' : ''}`}\r\n          />\r\n        </div> \r\n        <h1>Trade Activities - </h1>\r\n        <input className='address-input'\r\n            type=\"text\"\r\n            value={inputAddress}\r\n            onChange={handleAddressChange}\r\n            placeholder=\"Enter an address\"\r\n          />\r\n          <div className=\"total-profit\">Total Profit: {formatCurrency(totalProfit, 2)}</div> {/* Display total profit */}\r\n       \r\n        </div>\r\n        <table className={`table ${isLoading ? 'hidden' : ''}`}>\r\n          <thead>\r\n            <tr>\r\n              <th>Action Type</th>\r\n              <th>Average Price</th>\r\n              <th>Token ID</th>\r\n              <th>Collateral</th>\r\n              <th>Created At</th>\r\n              <th>Position Fee</th>\r\n              <th>Funding Fee</th>\r\n              <th>Borrow Fee</th>\r\n              <th>Is Long</th>\r\n              <th>Is Win</th>\r\n              <th>Is Plus</th>\r\n              <th>Mark Price</th>\r\n              <th>Pos ID</th>\r\n              <th>Position Type</th>\r\n              <th>Profit Loss</th>\r\n              <th>Trade Volume</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((entry, index) => (\r\n              <tr key={index}>\r\n                <td>{toTitleCase(entry.actionType)}</td>\r\n                <td>{formatCurrency(entry.averagePrice, 6)}</td>\r\n                <td>{tokenLookup[parseInt(entry.tokenId)]}</td>\r\n                <td>{formatCurrency(entry.collateral, 2)}</td>\r\n                <td>{new Date(entry.createdAt * 1000).toLocaleString()}</td>\r\n                <td>{formatCurrency(entry.positionFee, 2)}</td>\r\n                <td>{formatCurrency(entry.fundingFee, 2)}</td>\r\n                <td>{formatCurrency(entry.borrowFee, 2)}</td>\r\n                <td>{entry.isLong.toString()}</td>\r\n                <td>{entry.isWin.toString()}</td>\r\n                <td>{entry.isPlus.toString()}</td>\r\n                <td>{formatCurrency(entry.markPrice, 6)}</td>\r\n                <td>{entry.posId}</td>\r\n                <td>{entry.positionType}</td>\r\n                <td>{formatCurrency(entry.profitLoss, 2)}</td>\r\n                <td>{formatCurrency(entry.tradeVolume, 2)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        \r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Test1;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}