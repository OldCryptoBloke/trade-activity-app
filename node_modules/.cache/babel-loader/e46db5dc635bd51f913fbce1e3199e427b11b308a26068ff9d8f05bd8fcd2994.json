{"ast":null,"code":"import _regeneratorRuntime from\"F:/webtest/trade-activity-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"F:/webtest/trade-activity-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"F:/webtest/trade-activity-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import'./App.css';// You can define your own styling in this CSS file\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OpenPositions=function OpenPositions(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),lastFetchTime=_useState4[0],setLastFetchTime=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isLoading=_useState6[0],setIsLoading=_useState6[1];var _useState7=useState('0x0468a85ddd74daa10975bd9a15ca255b1e566e83'),_useState8=_slicedToArray(_useState7,2),inputAddress=_useState8[0],setInputAddress=_useState8[1];// Default address\nvar _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),totalProfit=_useState10[0],setTotalProfit=_useState10[1];// New state for total profit\nuseEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var _jsonData$,response,jsonData,_jsonData$2;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:setIsLoading(true);// Set loading state\n_context.prev=1;_context.next=4;return fetch(\"https://api.vela.exchange/graph/open_positions/42161/\".concat(inputAddress));case 4:response=_context.sent;_context.next=7;return response.json();case 7:jsonData=_context.sent;if(lastFetchTime===null||((_jsonData$=jsonData[0])===null||_jsonData$===void 0?void 0:_jsonData$.createdAt)<lastFetchTime){setData(jsonData);setLastFetchTime((_jsonData$2=jsonData[0])===null||_jsonData$2===void 0?void 0:_jsonData$2.createdAt);}_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.error('Error fetching data:',_context.t0);case 14:_context.prev=14;setIsLoading(false);// Clear loading state\nreturn _context.finish(14);case 17:case\"end\":return _context.stop();}},_callee,null,[[1,11,14,17]]);}));return _fetchData.apply(this,arguments);}fetchData();},[inputAddress,lastFetchTime]);// Only inputAddress and lastFetchTime\nuseEffect(function(){function fetchData(){return _fetchData2.apply(this,arguments);}function _fetchData2(){_fetchData2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _jsonData$3,apiUrl,response,jsonData,_jsonData$4,calculatedTotalProfit;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:setIsLoading(true);// Set loading state\n_context2.prev=1;apiUrl=\"https://api.vela.exchange/graph/open_positions/42161/\".concat(encodeURIComponent(inputAddress),\"/\");console.log('API URL:',apiUrl);_context2.next=6;return fetch(apiUrl);case 6:response=_context2.sent;_context2.next=9;return response.json();case 9:jsonData=_context2.sent;console.log('Fetched Data:',jsonData);if(lastFetchTime===null||((_jsonData$3=jsonData[0])===null||_jsonData$3===void 0?void 0:_jsonData$3.createdAt)>lastFetchTime){setData(jsonData);setLastFetchTime((_jsonData$4=jsonData[0])===null||_jsonData$4===void 0?void 0:_jsonData$4.createdAt);}// Calculate total profit\ncalculatedTotalProfit=data.reduce(function(total,activity){return total+parseFloat(activity.totalROI);},0);setTotalProfit(calculatedTotalProfit);_context2.next=19;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](1);console.error('Error fetching data:',_context2.t0);case 19:_context2.prev=19;setIsLoading(false);// Clear loading state\nreturn _context2.finish(19);case 22:case\"end\":return _context2.stop();}},_callee2,null,[[1,16,19,22]]);}));return _fetchData2.apply(this,arguments);}fetchData();var interval=setInterval(fetchData,30000);// Every 30 seconds\nreturn function(){clearInterval(interval);};},[data,inputAddress,lastFetchTime]);var tokenLookup={1:'BTC/USD',2:'ETH/USD',3:'LTC/USD',4:'ADA/USD',5:'DOGE/USD',6:'SHIB/USD',7:'ARB/USD',8:'SOL/USD',9:'MATIC/USD',10:'AVAX/USD',11:'GBP/USD',12:'EUR/USD',13:'USD/JPY',14:'AUD/USD',15:'USD/CAD',24:'XAG/USD',25:'XAU/USD',26:'USD/CNH',27:'USD/CHF',28:'USD/MXN',30:'USDT/USD',31:'ATOM/USD',32:'DOT/USD',33:'BNB/USD',34:'PEPE/USD',35:'XRP/USD',36:'CRV/USD',38:'OP/USD'// Add more entries as needed\n};var formatCurrency=function formatCurrency(value,decimalPlaces){var uintValue=value;// Assuming value is a string representing the UINT value\nvar decimals=1e18;// This is the scale of the UINT values in your data\nvar decimalValue=Number(uintValue)/decimals;// Convert UINT to decimal\nreturn new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:decimalPlaces,maximumFractionDigits:decimalPlaces}).format(decimalValue*1e-12);// Adjust for the desired decimal shift\n};// const formatNumber = (value, decimalPlaces) => {\n//   const uintValue = value; // Assuming value is a string representing the UINT value\n//   const decimals = 1e18; // This is the scale of the UINT values in your data\n//   const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\n//   return new Intl.NumberFormat('en-US', {\n//     minimumFractionDigits: decimalPlaces,\n//     maximumFractionDigits: decimalPlaces,\n//   }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\n// };\nvar toTitleCase=function toTitleCase(str){return str.split('_').map(function(word){return word.charAt(0)+word.slice(1).toLowerCase();}).join(' ');};var handleAddressChange=function handleAddressChange(event){setInputAddress(event.target.value);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo-container\",children:/*#__PURE__*/_jsx(\"img\",{src:\"\".concat(process.env.PUBLIC_URL,\"/logo.svg\"),alt:\"React Logo\",className:\"logo \".concat(isLoading?'spin':'')})}),/*#__PURE__*/_jsx(\"h1\",{children:\"Trade Activities 2 - \"}),/*#__PURE__*/_jsx(\"input\",{className:\"address-input\",type:\"text\",value:inputAddress,onChange:handleAddressChange,placeholder:\"Enter an address\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-profit\",children:[\"Total Profit: \",formatCurrency(totalProfit,2)]}),\" \"]}),/*#__PURE__*/_jsxs(\"table\",{className:\"table \".concat(isLoading?'hidden':''),children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Position ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Average Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Collateral\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Size\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Created At\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Closed At\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Position Fee\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Funding Fee\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Borrow Fee\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Token ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Is Long\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Mark Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Order Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Position Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Position Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Realised P/L\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total ROI\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:data.map(function(entry,index){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:entry.posId}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(entry.averagePrice,8)}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(entry.collateral,2)}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(entry.size,2)}),/*#__PURE__*/_jsx(\"td\",{children:new Date(entry.createdAt*1000).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:new Date(entry.closedAt*1000).toLocaleString()}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(entry.positionFee,2)}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(entry.fundingFee,2)}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(entry.borrowFee,2)}),/*#__PURE__*/_jsx(\"td\",{children:tokenLookup[parseInt(entry.tokenId)]}),/*#__PURE__*/_jsx(\"td\",{children:entry.isLong.toString()}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(entry.markPrice,8)}),/*#__PURE__*/_jsx(\"td\",{children:entry.orderStatus}),/*#__PURE__*/_jsx(\"td\",{children:toTitleCase(entry.positionStatus)}),/*#__PURE__*/_jsx(\"td\",{children:entry.positionType}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(entry.realisedPnl,2)}),/*#__PURE__*/_jsx(\"td\",{children:formatCurrency(entry.totalROI,2)})]},index);})})]})]});};export default OpenPositions;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","OpenPositions","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","lastFetchTime","setLastFetchTime","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","inputAddress","setInputAddress","_useState9","_useState10","totalProfit","setTotalProfit","fetchData","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_jsonData$","response","jsonData","_jsonData$2","wrap","_callee$","_context","prev","next","fetch","concat","sent","json","createdAt","t0","console","error","finish","stop","_fetchData2","_callee2","_jsonData$3","apiUrl","_jsonData$4","calculatedTotalProfit","_callee2$","_context2","encodeURIComponent","log","reduce","total","activity","parseFloat","totalROI","interval","setInterval","clearInterval","tokenLookup","formatCurrency","value","decimalPlaces","uintValue","decimals","decimalValue","Number","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","toTitleCase","str","split","map","word","charAt","slice","toLowerCase","join","handleAddressChange","event","target","className","children","src","process","env","PUBLIC_URL","alt","type","onChange","placeholder","entry","index","posId","averagePrice","collateral","size","Date","toLocaleString","closedAt","positionFee","fundingFee","borrowFee","parseInt","tokenId","isLong","toString","markPrice","orderStatus","positionStatus","positionType","realisedPnl"],"sources":["F:/webtest/trade-activity-app/src/pages/OpenPositions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css'; // You can define your own styling in this CSS file\r\nconst OpenPositions = () => {\r\n    \r\n    const [data, setData] = useState([]);\r\n    const [lastFetchTime, setLastFetchTime] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [inputAddress, setInputAddress] = useState('0x0468a85ddd74daa10975bd9a15ca255b1e566e83'); // Default address\r\n    const [totalProfit, setTotalProfit] = useState(0); // New state for total profit\r\n    \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        setIsLoading(true); // Set loading state\r\n        try {\r\n          const response = await fetch(\r\n            `https://api.vela.exchange/graph/open_positions/42161/${inputAddress}`\r\n          );\r\n          const jsonData = await response.json();\r\n  \r\n          if (lastFetchTime === null || jsonData[0]?.createdAt < lastFetchTime) {\r\n            setData(jsonData);\r\n            setLastFetchTime(jsonData[0]?.createdAt);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        } finally {\r\n          setIsLoading(false); // Clear loading state\r\n        }\r\n      }\r\n  \r\n      fetchData();\r\n    }, [inputAddress, lastFetchTime]); // Only inputAddress and lastFetchTime\r\n    \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        setIsLoading(true); // Set loading state\r\n        try {\r\n          const apiUrl = `https://api.vela.exchange/graph/open_positions/42161/${encodeURIComponent(inputAddress)}/`;\r\n          console.log('API URL:', apiUrl);\r\n      \r\n          const response = await fetch(apiUrl);\r\n          const jsonData = await response.json();\r\n          console.log('Fetched Data:', jsonData);\r\n      \r\n          if (lastFetchTime === null || jsonData[0]?.createdAt > lastFetchTime) {\r\n            setData(jsonData);\r\n            setLastFetchTime(jsonData[0]?.createdAt);\r\n          }\r\n  \r\n        \r\n          // Calculate total profit\r\n          const calculatedTotalProfit = data.reduce((total, activity) => {\r\n            return total + parseFloat(activity.totalROI);\r\n          }, 0);\r\n          setTotalProfit(calculatedTotalProfit);\r\n  \r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        } finally {\r\n          setIsLoading(false); // Clear loading state\r\n        }\r\n      }\r\n  \r\n      fetchData();\r\n      const interval = setInterval(fetchData, 30000); // Every 30 seconds\r\n  \r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }, [data, inputAddress, lastFetchTime]);\r\n  \r\n    const tokenLookup = {\r\n      1: 'BTC/USD',\r\n      2: 'ETH/USD',\r\n      3: 'LTC/USD',\r\n      4: 'ADA/USD',\r\n      5: 'DOGE/USD',\r\n      6: 'SHIB/USD',\r\n      7: 'ARB/USD',\r\n      8: 'SOL/USD',\r\n      9: 'MATIC/USD',\r\n      10: 'AVAX/USD',\r\n      11: 'GBP/USD',\r\n      12: 'EUR/USD',\r\n      13: 'USD/JPY',\r\n      14: 'AUD/USD',\r\n      15: 'USD/CAD',\r\n      24: 'XAG/USD',\r\n      25: 'XAU/USD',\r\n      26: 'USD/CNH',\r\n      27: 'USD/CHF',\r\n      28: 'USD/MXN',\r\n      30: 'USDT/USD',\r\n      31: 'ATOM/USD',\r\n      32: 'DOT/USD',\r\n      33: 'BNB/USD',\r\n      34: 'PEPE/USD',\r\n      35: 'XRP/USD',\r\n      36: 'CRV/USD',\r\n      38: 'OP/USD',\r\n      // Add more entries as needed\r\n    };\r\n  \r\n      const formatCurrency = (value, decimalPlaces) => {\r\n      const uintValue = value; // Assuming value is a string representing the UINT value\r\n      const decimals = 1e18; // This is the scale of the UINT values in your data\r\n      const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\r\n      \r\n      return new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: decimalPlaces,\r\n        maximumFractionDigits: decimalPlaces,\r\n      }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\r\n    };\r\n\r\n    // const formatNumber = (value, decimalPlaces) => {\r\n    //   const uintValue = value; // Assuming value is a string representing the UINT value\r\n    //   const decimals = 1e18; // This is the scale of the UINT values in your data\r\n    //   const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\r\n      \r\n    //   return new Intl.NumberFormat('en-US', {\r\n    //     minimumFractionDigits: decimalPlaces,\r\n    //     maximumFractionDigits: decimalPlaces,\r\n    //   }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\r\n    // };\r\n  \r\n    const toTitleCase = (str) => {\r\n      return str\r\n        .split('_')\r\n        .map((word) => word.charAt(0) + word.slice(1).toLowerCase())\r\n        .join(' ');\r\n    };\r\n  \r\n    const handleAddressChange = (event) => {\r\n      setInputAddress(event.target.value);\r\n    };\r\n   \r\n  \r\n    return (\r\n      <div className=\"App\">\r\n       \r\n        <div className=\"header\">\r\n        \r\n        <div className=\"logo-container\">\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/logo.svg`}\r\n            alt=\"React Logo\"\r\n            className={`logo ${isLoading ? 'spin' : ''}`}\r\n          />\r\n        </div> \r\n        <h1>Trade Activities 2 - </h1>\r\n        <input className='address-input'\r\n            type=\"text\"\r\n            value={inputAddress}\r\n            onChange={handleAddressChange}\r\n            placeholder=\"Enter an address\"\r\n          />\r\n          <div className=\"total-profit\">Total Profit: {formatCurrency(totalProfit, 2)}</div> {/* Display total profit */}\r\n       \r\n        </div>\r\n        <table className={`table ${isLoading ? 'hidden' : ''}`}>\r\n          <thead>\r\n            <tr>\r\n              <th>Position ID</th>\r\n              <th>Average Price</th>\r\n              <th>Collateral</th>\r\n              <th>Size</th>\r\n              <th>Created At</th>\r\n              <th>Closed At</th>\r\n              <th>Position Fee</th>\r\n              <th>Funding Fee</th>\r\n              <th>Borrow Fee</th>\r\n              <th>Token ID</th>\r\n              <th>Is Long</th>\r\n              <th>Mark Price</th>\r\n              <th>Order Status</th>\r\n              <th>Position Status</th>\r\n              <th>Position Type</th>\r\n              <th>Realised P/L</th>\r\n              <th>Total ROI</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((entry, index) => (\r\n              <tr key={index}>\r\n                <td>{entry.posId}</td>\r\n                <td>{formatCurrency(entry.averagePrice, 8)}</td>\r\n                <td>{formatCurrency(entry.collateral, 2)}</td>\r\n                <td>{formatCurrency(entry.size, 2)}</td>\r\n                <td>{new Date(entry.createdAt * 1000).toLocaleString()}</td>\r\n                <td>{new Date(entry.closedAt * 1000).toLocaleString()}</td>\r\n                <td>{formatCurrency(entry.positionFee, 2)}</td>\r\n                <td>{formatCurrency(entry.fundingFee, 2)}</td>\r\n                <td>{formatCurrency(entry.borrowFee, 2)}</td>\r\n                <td>{tokenLookup[parseInt(entry.tokenId)]}</td>\r\n                <td>{entry.isLong.toString()}</td>\r\n                <td>{formatCurrency(entry.markPrice, 8)}</td>\r\n                <td>{entry.orderStatus}</td>\r\n                <td>{toTitleCase(entry.positionStatus)}</td>\r\n                <td>{entry.positionType}</td>\r\n                <td>{formatCurrency(entry.realisedPnl, 2)}</td>\r\n                <td>{formatCurrency(entry.totalROI, 2)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        \r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default OpenPositions;\r\n  \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}