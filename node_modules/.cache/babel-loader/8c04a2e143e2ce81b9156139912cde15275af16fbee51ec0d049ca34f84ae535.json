{"ast":null,"code":"var _jsxFileName = \"F:\\\\webtest\\\\trade-activity-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // You can define your own styling in this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [lastFetchTime, setLastFetchTime] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [inputAddress, setInputAddress] = useState(\"'0x40988180c9cc5e7d0ac4e8055545b76a4470fe14'\"); // Default address\n  const [totalProfit, setTotalProfit] = useState(0); // New state for total profit\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true); // Set loading state\n      try {\n        var _jsonData$;\n        const apiUrl = `https://api.vela.exchange/graph/trade_activities/42161/${encodeURIComponent(inputAddress)}/`;\n        console.log('API URL:', apiUrl);\n        const response = await fetch(apiUrl);\n        const jsonData = await response.json();\n        console.log('Fetched Data:', jsonData);\n        if (lastFetchTime === null || ((_jsonData$ = jsonData[0]) === null || _jsonData$ === void 0 ? void 0 : _jsonData$.createdAt) > lastFetchTime) {\n          var _jsonData$2;\n          setData(jsonData);\n          setLastFetchTime((_jsonData$2 = jsonData[0]) === null || _jsonData$2 === void 0 ? void 0 : _jsonData$2.createdAt);\n        }\n\n        // Calculate total profit\n        const calculatedTotalProfit = data.reduce((total, activity) => {\n          return total + parseFloat(activity.profitLoss);\n        }, 0);\n        setTotalProfit(calculatedTotalProfit);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false); // Clear loading state\n      }\n    }\n\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // Every 30 seconds\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [data, inputAddress, lastFetchTime]);\n  const tokenLookup = {\n    1: 'BTC/USD',\n    2: 'ETH/USD',\n    3: 'LTC/USD',\n    4: 'ADA/USD',\n    5: 'DOGE/USD',\n    6: 'SHIB/USD',\n    7: 'ARB/USD',\n    8: 'SOL/USD',\n    9: 'MATIC/USD',\n    10: 'AVAX/USD',\n    11: 'GBP/USD',\n    12: 'EUR/USD',\n    13: 'USD/JPY',\n    14: 'AUD/USD',\n    15: 'USD/CAD',\n    24: 'XAG/USD',\n    25: 'XAU/USD',\n    26: 'USD/CNH',\n    27: 'USD/CHF',\n    28: 'USD/MXN',\n    30: 'USDT/USD',\n    31: 'ATOM/USD',\n    32: 'DOT/USD',\n    33: 'BNB/USD',\n    34: 'PEPE/USD',\n    35: 'XRP/USD',\n    36: 'CRV/USD',\n    38: 'OP/USD'\n    // Add more entries as needed\n  };\n\n  const formatCurrency = (value, decimalPlaces) => {\n    const uintValue = value; // Assuming value is a string representing the UINT value\n    const decimals = 1e18; // This is the scale of the UINT values in your data\n    const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\n\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: decimalPlaces,\n      maximumFractionDigits: decimalPlaces\n    }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\n  };\n\n  const toTitleCase = str => {\n    return str.split('_').map(word => word.charAt(0) + word.slice(1).toLowerCase()).join(' ');\n  };\n  const handleAddressChange = event => {\n    setInputAddress(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/logo.svg`,\n          alt: \"React Logo\",\n          className: `logo ${isLoading ? 'spin' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trade Activities - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"address-input\",\n        type: \"text\",\n        value: inputAddress,\n        onChange: handleAddressChange,\n        placeholder: \"Enter an address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-profit\",\n        children: [\"Total Profit: \", formatCurrency(totalProfit, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: `table ${isLoading ? 'hidden' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Token ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Collateral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Funding Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Borrow Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Win\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mark Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pos ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Profit Loss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Trade Volume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: toTitleCase(entry.actionType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.averagePrice, 6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tokenLookup[parseInt(entry.tokenId)]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.collateral, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(entry.createdAt * 1000).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.positionFee, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.fundingFee, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.borrowFee, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.isLong.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.isWin.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.isPlus.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.markPrice, 6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.posId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.positionType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.profitLoss, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.tradeVolume, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GmubbXvFKz1TeF05b9orhtTV0TU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","data","setData","lastFetchTime","setLastFetchTime","isLoading","setIsLoading","inputAddress","setInputAddress","totalProfit","setTotalProfit","fetchData","_jsonData$","apiUrl","encodeURIComponent","console","log","response","fetch","jsonData","json","createdAt","_jsonData$2","calculatedTotalProfit","reduce","total","activity","parseFloat","profitLoss","error","interval","setInterval","clearInterval","tokenLookup","formatCurrency","value","decimalPlaces","uintValue","decimals","decimalValue","Number","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","toTitleCase","str","split","map","word","charAt","slice","toLowerCase","join","handleAddressChange","event","target","className","children","src","process","env","PUBLIC_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","entry","index","actionType","averagePrice","parseInt","tokenId","collateral","Date","toLocaleString","positionFee","fundingFee","borrowFee","isLong","toString","isWin","isPlus","markPrice","posId","positionType","tradeVolume","_c","$RefreshReg$"],"sources":["F:/webtest/trade-activity-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css'; // You can define your own styling in this CSS file\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [lastFetchTime, setLastFetchTime] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [inputAddress, setInputAddress] = useState(\"'0x40988180c9cc5e7d0ac4e8055545b76a4470fe14'\"); // Default address\r\n  const [totalProfit, setTotalProfit] = useState(0); // New state for total profit\r\n  \r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setIsLoading(true); // Set loading state\r\n      try {\r\n        const apiUrl = `https://api.vela.exchange/graph/trade_activities/42161/${encodeURIComponent(inputAddress)}/`;\r\n        console.log('API URL:', apiUrl);\r\n    \r\n        const response = await fetch(apiUrl);\r\n        const jsonData = await response.json();\r\n        console.log('Fetched Data:', jsonData);\r\n    \r\n        if (lastFetchTime === null || jsonData[0]?.createdAt > lastFetchTime) {\r\n          setData(jsonData);\r\n          setLastFetchTime(jsonData[0]?.createdAt);\r\n        }\r\n\r\n        // Calculate total profit\r\n        const calculatedTotalProfit = data.reduce((total, activity) => {\r\n          return total + parseFloat(activity.profitLoss);\r\n        }, 0);\r\n        setTotalProfit(calculatedTotalProfit);\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setIsLoading(false); // Clear loading state\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 30000); // Every 30 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [data, inputAddress, lastFetchTime]);\r\n\r\n  const tokenLookup = {\r\n    1: 'BTC/USD',\r\n    2: 'ETH/USD',\r\n    3: 'LTC/USD',\r\n    4: 'ADA/USD',\r\n    5: 'DOGE/USD',\r\n    6: 'SHIB/USD',\r\n    7: 'ARB/USD',\r\n    8: 'SOL/USD',\r\n    9: 'MATIC/USD',\r\n    10: 'AVAX/USD',\r\n    11: 'GBP/USD',\r\n    12: 'EUR/USD',\r\n    13: 'USD/JPY',\r\n    14: 'AUD/USD',\r\n    15: 'USD/CAD',\r\n    24: 'XAG/USD',\r\n    25: 'XAU/USD',\r\n    26: 'USD/CNH',\r\n    27: 'USD/CHF',\r\n    28: 'USD/MXN',\r\n    30: 'USDT/USD',\r\n    31: 'ATOM/USD',\r\n    32: 'DOT/USD',\r\n    33: 'BNB/USD',\r\n    34: 'PEPE/USD',\r\n    35: 'XRP/USD',\r\n    36: 'CRV/USD',\r\n    38: 'OP/USD',\r\n    // Add more entries as needed\r\n  };\r\n\r\n    const formatCurrency = (value, decimalPlaces) => {\r\n    const uintValue = value; // Assuming value is a string representing the UINT value\r\n    const decimals = 1e18; // This is the scale of the UINT values in your data\r\n    const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\r\n    \r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: decimalPlaces,\r\n      maximumFractionDigits: decimalPlaces,\r\n    }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\r\n  };\r\n\r\n  const toTitleCase = (str) => {\r\n    return str\r\n      .split('_')\r\n      .map((word) => word.charAt(0) + word.slice(1).toLowerCase())\r\n      .join(' ');\r\n  };\r\n\r\n  const handleAddressChange = (event) => {\r\n    setInputAddress(event.target.value);\r\n  };\r\n \r\n\r\n  return (\r\n    <div className=\"App\">\r\n     \r\n      <div className=\"header\">\r\n      \r\n      <div className=\"logo-container\">\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/logo.svg`}\r\n          alt=\"React Logo\"\r\n          className={`logo ${isLoading ? 'spin' : ''}`}\r\n        />\r\n      </div> \r\n      <h1>Trade Activities - </h1>\r\n      <input className='address-input'\r\n          type=\"text\"\r\n          value={inputAddress}\r\n          onChange={handleAddressChange}\r\n          placeholder=\"Enter an address\"\r\n        />\r\n        <div className=\"total-profit\">Total Profit: {formatCurrency(totalProfit, 2)}</div> {/* Display total profit */}\r\n     \r\n      </div>\r\n      <table className={`table ${isLoading ? 'hidden' : ''}`}>\r\n        <thead>\r\n          <tr>\r\n            <th>Action Type</th>\r\n            <th>Average Price</th>\r\n            <th>Token ID</th>\r\n            <th>Collateral</th>\r\n            <th>Created At</th>\r\n            <th>Position Fee</th>\r\n            <th>Funding Fee</th>\r\n            <th>Borrow Fee</th>\r\n            <th>Is Long</th>\r\n            <th>Is Win</th>\r\n            <th>Is Plus</th>\r\n            <th>Mark Price</th>\r\n            <th>Pos ID</th>\r\n            <th>Position Type</th>\r\n            <th>Profit Loss</th>\r\n            <th>Trade Volume</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((entry, index) => (\r\n            <tr key={index}>\r\n              <td>{toTitleCase(entry.actionType)}</td>\r\n              <td>{formatCurrency(entry.averagePrice, 6)}</td>\r\n              <td>{tokenLookup[parseInt(entry.tokenId)]}</td>\r\n              <td>{formatCurrency(entry.collateral, 2)}</td>\r\n              <td>{new Date(entry.createdAt * 1000).toLocaleString()}</td>\r\n              <td>{formatCurrency(entry.positionFee, 2)}</td>\r\n              <td>{formatCurrency(entry.fundingFee, 2)}</td>\r\n              <td>{formatCurrency(entry.borrowFee, 2)}</td>\r\n              <td>{entry.isLong.toString()}</td>\r\n              <td>{entry.isWin.toString()}</td>\r\n              <td>{entry.isPlus.toString()}</td>\r\n              <td>{formatCurrency(entry.markPrice, 6)}</td>\r\n              <td>{entry.posId}</td>\r\n              <td>{entry.positionType}</td>\r\n              <td>{formatCurrency(entry.profitLoss, 2)}</td>\r\n              <td>{formatCurrency(entry.tradeVolume, 2)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}