{"ast":null,"code":"var _jsxFileName = \"F:\\\\webtest\\\\trade-activity-app\\\\src\\\\pages\\\\ClosedPositions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // You can define your own styling in this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClosedPositions = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [lastFetchTime, setLastFetchTime] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [inputAddress, setInputAddress] = useState('0x4c2b0B4Fff1bb49A94d66130e40771351319A751'); // Default address\n  const [totalProfit, setTotalProfit] = useState(0); // New state for total profit\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const handleButtonClick = () => {\n    setButtonClicked(true);\n  };\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true); // Set loading state\n      try {\n        var _jsonData$;\n        const response = await fetch(`https://api.vela.exchange/graph/closed_positions/42161/${inputAddress}`);\n        const jsonData = await response.json();\n        if (lastFetchTime === null || ((_jsonData$ = jsonData[0]) === null || _jsonData$ === void 0 ? void 0 : _jsonData$.createdAt) < lastFetchTime) {\n          var _jsonData$2;\n          setData(jsonData);\n          setLastFetchTime((_jsonData$2 = jsonData[0]) === null || _jsonData$2 === void 0 ? void 0 : _jsonData$2.createdAt);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false); // Clear loading state\n      }\n    }\n\n    fetchData();\n  }, [inputAddress, lastFetchTime]); // Only inputAddress and lastFetchTime\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true); // Set loading state\n      try {\n        var _jsonData$3;\n        const apiUrl = `https://api.vela.exchange/graph/closed_positions/42161/${encodeURIComponent(inputAddress)}/`;\n        console.log('API URL:', apiUrl);\n        const response = await fetch(apiUrl);\n        const jsonData = await response.json();\n        console.log('Fetched Data:', jsonData);\n        if (lastFetchTime === null || ((_jsonData$3 = jsonData[0]) === null || _jsonData$3 === void 0 ? void 0 : _jsonData$3.createdAt) > lastFetchTime) {\n          var _jsonData$4;\n          setData(jsonData);\n          setLastFetchTime((_jsonData$4 = jsonData[0]) === null || _jsonData$4 === void 0 ? void 0 : _jsonData$4.createdAt);\n        }\n\n        //Calculate total profit\n        const calculatedTotalProfit = data.reduce((total, activity) => {\n          return total + parseFloat(activity.realisedPnl);\n        }, 0);\n        setTotalProfit(calculatedTotalProfit);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false); // Clear loading state\n      }\n    }\n\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // Every 30 seconds\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [data, inputAddress, lastFetchTime]);\n  const tokenLookup = {\n    1: 'BTC/USD',\n    2: 'ETH/USD',\n    3: 'LTC/USD',\n    4: 'ADA/USD',\n    5: 'DOGE/USD',\n    6: 'SHIB/USD',\n    7: 'ARB/USD',\n    8: 'SOL/USD',\n    9: 'MATIC/USD',\n    10: 'AVAX/USD',\n    11: 'GBP/USD',\n    12: 'EUR/USD',\n    13: 'USD/JPY',\n    14: 'AUD/USD',\n    15: 'USD/CAD',\n    24: 'XAG/USD',\n    25: 'XAU/USD',\n    26: 'USD/CNH',\n    27: 'USD/CHF',\n    28: 'USD/MXN',\n    30: 'USDT/USD',\n    31: 'ATOM/USD',\n    32: 'DOT/USD',\n    33: 'BNB/USD',\n    34: 'PEPE/USD',\n    35: 'XRP/USD',\n    36: 'CRV/USD',\n    38: 'OP/USD'\n    // Add more entries as needed\n  };\n\n  const formatCurrency = (value, decimalPlaces) => {\n    const uintValue = value; // Assuming value is a string representing the UINT value\n    const decimals = 1e18; // This is the scale of the UINT values in your data\n    const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\n\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: decimalPlaces,\n      maximumFractionDigits: decimalPlaces\n    }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\n  };\n\n  // const formatNumber = (value, decimalPlaces) => {\n  //   const uintValue = value; // Assuming value is a string representing the UINT value\n  //   const decimals = 1e18; // This is the scale of the UINT values in your data\n  //   const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\n\n  //   return new Intl.NumberFormat('en-US', {\n  //     minimumFractionDigits: decimalPlaces,\n  //     maximumFractionDigits: decimalPlaces,\n  //   }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\n  // };\n\n  const toTitleCase = str => {\n    return str.split('_').map(word => word.charAt(0) + word.slice(1).toLowerCase()).join(' ');\n  };\n  const handleAddressChange = event => {\n    setInputAddress(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/logo.svg`,\n          alt: \"React Logo\",\n          className: `logo ${isLoading ? 'spin' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Closed Positions - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"address-input\",\n        type: \"text\",\n        value: inputAddress,\n        onChange: handleAddressChange,\n        placeholder: \"Enter an address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        children: \"Retrieve Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), inputAddress === '' && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter an address to retrieve closed positions.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-profit\",\n        children: [\" Total Profit: \", formatCurrency(totalProfit, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), data.length === 0 && !isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No closed positions available for the provided address.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: `table ${isLoading ? 'hidden' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Collateral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Closed At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Funding Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Borrow Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Token ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mark Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Order Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Realised P/L\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total ROI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.posId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.averagePrice, 8)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.collateral, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.size, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(entry.createdAt * 1000).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(entry.closedAt * 1000).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.positionFee, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.fundingFee, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.borrowFee, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: tokenLookup[parseInt(entry.tokenId)]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.isLong.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.markPrice, 8)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.orderStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: toTitleCase(entry.positionStatus)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.positionType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.realisedPnl, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.totalROI, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s(ClosedPositions, \"E/zWWAbx4FioQD61SLk2h40RLfI=\");\n_c = ClosedPositions;\nexport default ClosedPositions;\nvar _c;\n$RefreshReg$(_c, \"ClosedPositions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ClosedPositions","_s","data","setData","lastFetchTime","setLastFetchTime","isLoading","setIsLoading","inputAddress","setInputAddress","totalProfit","setTotalProfit","buttonClicked","setButtonClicked","handleButtonClick","fetchData","_jsonData$","response","fetch","jsonData","json","createdAt","_jsonData$2","error","console","_jsonData$3","apiUrl","encodeURIComponent","log","_jsonData$4","calculatedTotalProfit","reduce","total","activity","parseFloat","realisedPnl","interval","setInterval","clearInterval","tokenLookup","formatCurrency","value","decimalPlaces","uintValue","decimals","decimalValue","Number","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","toTitleCase","str","split","map","word","charAt","slice","toLowerCase","join","handleAddressChange","event","target","className","children","src","process","env","PUBLIC_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","length","entry","index","posId","averagePrice","collateral","size","Date","toLocaleString","closedAt","positionFee","fundingFee","borrowFee","parseInt","tokenId","isLong","toString","markPrice","orderStatus","positionStatus","positionType","totalROI","_c","$RefreshReg$"],"sources":["F:/webtest/trade-activity-app/src/pages/ClosedPositions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css'; // You can define your own styling in this CSS file\r\nconst ClosedPositions = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [lastFetchTime, setLastFetchTime] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [inputAddress, setInputAddress] = useState('0x4c2b0B4Fff1bb49A94d66130e40771351319A751'); // Default address\r\n    const [totalProfit, setTotalProfit] = useState(0); // New state for total profit\r\n    const [buttonClicked, setButtonClicked] = useState(false);\r\n\r\nconst handleButtonClick = () => {\r\n  setButtonClicked(true);\r\n};\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setIsLoading(true); // Set loading state\r\n            try {\r\n                const response = await fetch(\r\n                    `https://api.vela.exchange/graph/closed_positions/42161/${inputAddress}`\r\n                );\r\n                const jsonData = await response.json();\r\n\r\n                if (lastFetchTime === null || jsonData[0]?.createdAt < lastFetchTime) {\r\n                    setData(jsonData);\r\n                    setLastFetchTime(jsonData[0]?.createdAt);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                setIsLoading(false); // Clear loading state\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n    }, [inputAddress, lastFetchTime]); // Only inputAddress and lastFetchTime\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            setIsLoading(true); // Set loading state\r\n            try {\r\n                const apiUrl = `https://api.vela.exchange/graph/closed_positions/42161/${encodeURIComponent(inputAddress)}/`;\r\n                console.log('API URL:', apiUrl);\r\n\r\n                const response = await fetch(apiUrl);\r\n                const jsonData = await response.json();\r\n                console.log('Fetched Data:', jsonData);\r\n\r\n                if (lastFetchTime === null || jsonData[0]?.createdAt > lastFetchTime) {\r\n                    setData(jsonData);\r\n                    setLastFetchTime(jsonData[0]?.createdAt);\r\n                }\r\n\r\n\r\n                //Calculate total profit\r\n                const calculatedTotalProfit = data.reduce((total, activity) => {\r\n                    return total + parseFloat(activity.realisedPnl);\r\n                }, 0);\r\n                setTotalProfit(calculatedTotalProfit);\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                setIsLoading(false); // Clear loading state\r\n            }\r\n        }\r\n\r\n        fetchData();\r\n        const interval = setInterval(fetchData, 30000); // Every 30 seconds\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [data, inputAddress, lastFetchTime]);\r\n\r\n    const tokenLookup = {\r\n        1: 'BTC/USD',\r\n        2: 'ETH/USD',\r\n        3: 'LTC/USD',\r\n        4: 'ADA/USD',\r\n        5: 'DOGE/USD',\r\n        6: 'SHIB/USD',\r\n        7: 'ARB/USD',\r\n        8: 'SOL/USD',\r\n        9: 'MATIC/USD',\r\n        10: 'AVAX/USD',\r\n        11: 'GBP/USD',\r\n        12: 'EUR/USD',\r\n        13: 'USD/JPY',\r\n        14: 'AUD/USD',\r\n        15: 'USD/CAD',\r\n        24: 'XAG/USD',\r\n        25: 'XAU/USD',\r\n        26: 'USD/CNH',\r\n        27: 'USD/CHF',\r\n        28: 'USD/MXN',\r\n        30: 'USDT/USD',\r\n        31: 'ATOM/USD',\r\n        32: 'DOT/USD',\r\n        33: 'BNB/USD',\r\n        34: 'PEPE/USD',\r\n        35: 'XRP/USD',\r\n        36: 'CRV/USD',\r\n        38: 'OP/USD',\r\n        // Add more entries as needed\r\n    };\r\n\r\n    const formatCurrency = (value, decimalPlaces) => {\r\n        const uintValue = value; // Assuming value is a string representing the UINT value\r\n        const decimals = 1e18; // This is the scale of the UINT values in your data\r\n        const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\r\n\r\n        return new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            minimumFractionDigits: decimalPlaces,\r\n            maximumFractionDigits: decimalPlaces,\r\n        }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\r\n    };\r\n\r\n    // const formatNumber = (value, decimalPlaces) => {\r\n    //   const uintValue = value; // Assuming value is a string representing the UINT value\r\n    //   const decimals = 1e18; // This is the scale of the UINT values in your data\r\n    //   const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\r\n\r\n    //   return new Intl.NumberFormat('en-US', {\r\n    //     minimumFractionDigits: decimalPlaces,\r\n    //     maximumFractionDigits: decimalPlaces,\r\n    //   }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\r\n    // };\r\n\r\n    const toTitleCase = (str) => {\r\n        return str\r\n            .split('_')\r\n            .map((word) => word.charAt(0) + word.slice(1).toLowerCase())\r\n            .join(' ');\r\n    };\r\n\r\n    const handleAddressChange = (event) => {\r\n        setInputAddress(event.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <div className=\"header\">\r\n\r\n                <div className=\"logo-container\">\r\n                    <img\r\n                        src={`${process.env.PUBLIC_URL}/logo.svg`}\r\n                        alt=\"React Logo\"\r\n                        className={`logo ${isLoading ? 'spin' : ''}`}\r\n                    />\r\n                </div>\r\n                <h1>Closed Positions - </h1>\r\n                <input\r\n                    className='address-input'\r\n                    type=\"text\"\r\n                    value={inputAddress}\r\n                    onChange={handleAddressChange}\r\n                    placeholder=\"Enter an address\"\r\n                />\r\n                <button onClick={handleButtonClick}>Retrieve Data</button>\r\n                {inputAddress === '' && !isLoading && (\r\n                    <p>Enter an address to retrieve closed positions.</p>\r\n                )}\r\n\r\n                <div className=\"total-profit\"> Total Profit: {formatCurrency(totalProfit, 2)}</div> {/* Display total profit */}\r\n\r\n            </div>\r\n            {data.length === 0 && !isLoading ? (\r\n                <p>No closed positions available for the provided address.</p>\r\n            ) : (\r\n                <table className={`table ${isLoading ? 'hidden' : ''}`}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Position ID</th>\r\n                            <th>Average Price</th>\r\n                            <th>Collateral</th>\r\n                            <th>Size</th>\r\n                            <th>Created At</th>\r\n                            <th>Closed At</th>\r\n                            <th>Position Fee</th>\r\n                            <th>Funding Fee</th>\r\n                            <th>Borrow Fee</th>\r\n                            <th>Token ID</th>\r\n                            <th>Is Long</th>\r\n                            <th>Mark Price</th>\r\n                            <th>Order Status</th>\r\n                            <th>Position Status</th>\r\n                            <th>Position Type</th>\r\n                            <th>Realised P/L</th>\r\n                            <th>Total ROI</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {data.map((entry, index) => (\r\n                            <tr key={index}>\r\n                                <td>{entry.posId}</td>\r\n                                <td>{formatCurrency(entry.averagePrice, 8)}</td>\r\n                                <td>{formatCurrency(entry.collateral, 2)}</td>\r\n                                <td>{formatCurrency(entry.size, 2)}</td>\r\n                                <td>{new Date(entry.createdAt * 1000).toLocaleString()}</td>\r\n                                <td>{new Date(entry.closedAt * 1000).toLocaleString()}</td>\r\n                                <td>{formatCurrency(entry.positionFee, 2)}</td>\r\n                                <td>{formatCurrency(entry.fundingFee, 2)}</td>\r\n                                <td>{formatCurrency(entry.borrowFee, 2)}</td>\r\n                                <td>{tokenLookup[parseInt(entry.tokenId)]}</td>\r\n                                <td>{entry.isLong.toString()}</td>\r\n                                <td>{formatCurrency(entry.markPrice, 8)}</td>\r\n                                <td>{entry.orderStatus}</td>\r\n                                <td>{toTitleCase(entry.positionStatus)}</td>\r\n                                <td>{entry.positionType}</td>\r\n                                <td>{formatCurrency(entry.realisedPnl, 2)}</td>\r\n                                <td>{formatCurrency(entry.totalROI, 2)}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>)}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClosedPositions;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}