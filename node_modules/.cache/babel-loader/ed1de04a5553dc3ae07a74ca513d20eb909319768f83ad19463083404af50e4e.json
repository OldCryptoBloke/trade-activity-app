{"ast":null,"code":"var _jsxFileName = \"F:\\\\webtest\\\\trade-activity-app\\\\src\\\\pages\\\\Withdrawals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css'; // You can define your own styling in this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Withdrawals = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [lastFetchTime, setLastFetchTime] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [inputAddress, setInputAddress] = useState('0x4c2b0B4Fff1bb49A94d66130e40771351319A751'); // Default address\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true); // Set loading state\n      try {\n        var _jsonData$;\n        const response = await fetch(`https://api.vela.exchange/graph/deposits/42161/${inputAddress}`);\n        const jsonData = await response.json();\n        if (lastFetchTime === null || ((_jsonData$ = jsonData[0]) === null || _jsonData$ === void 0 ? void 0 : _jsonData$.createdAt) < lastFetchTime) {\n          var _jsonData$2;\n          setData(jsonData);\n          setLastFetchTime((_jsonData$2 = jsonData[0]) === null || _jsonData$2 === void 0 ? void 0 : _jsonData$2.createdAt);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false); // Clear loading state\n      }\n    }\n\n    fetchData();\n  }, [inputAddress, lastFetchTime]); // Only inputAddress and lastFetchTime\n\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true); // Set loading state\n      try {\n        var _jsonData$3;\n        const apiUrl = `https://api.vela.exchange/graph/deposits/42161/${encodeURIComponent(inputAddress)}/`;\n        console.log('API URL:', apiUrl);\n        const response = await fetch(apiUrl);\n        const jsonData = await response.json();\n        console.log('Fetched Data:', jsonData);\n        if (lastFetchTime === null || ((_jsonData$3 = jsonData[0]) === null || _jsonData$3 === void 0 ? void 0 : _jsonData$3.createdAt) > lastFetchTime) {\n          var _jsonData$4;\n          setData(jsonData);\n          setLastFetchTime((_jsonData$4 = jsonData[0]) === null || _jsonData$4 === void 0 ? void 0 : _jsonData$4.createdAt);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setIsLoading(false); // Clear loading state\n      }\n    }\n\n    fetchData();\n    const interval = setInterval(fetchData, 30000); // Every 30 seconds\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [data, inputAddress, lastFetchTime]);\n  const formatCurrency = (value, decimalPlaces) => {\n    const uintValue = value; // Assuming value is a string representing the UINT value\n    const decimals = 1e6; // This is the scale of the UINT values in your data\n    const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\n\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: decimalPlaces,\n      maximumFractionDigits: decimalPlaces\n    }).format(decimalValue * 1e-0); // Adjust for the desired decimal shift\n  };\n\n  const handleAddressChange = event => {\n    setInputAddress(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/logo.svg`,\n          alt: \"React Logo\",\n          className: `logo ${isLoading ? 'spin' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Withdrawals - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"address-input\",\n        type: \"text\",\n        value: inputAddress,\n        onChange: handleAddressChange,\n        placeholder: \"Enter an address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: `table ${isLoading ? 'hidden' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatCurrency(entry.amount, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(entry.createdAt * 1000).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://arbiscan.io/tx/${entry.trasactionHash}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: entry.trasactionHash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n};\n_s(Withdrawals, \"tMYD8FFT7yOXjsrG1WREGDMB1eg=\");\n_c = Withdrawals;\nexport default Withdrawals;\nvar _c;\n$RefreshReg$(_c, \"Withdrawals\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Withdrawals","_s","data","setData","lastFetchTime","setLastFetchTime","isLoading","setIsLoading","inputAddress","setInputAddress","fetchData","_jsonData$","response","fetch","jsonData","json","createdAt","_jsonData$2","error","console","_jsonData$3","apiUrl","encodeURIComponent","log","_jsonData$4","interval","setInterval","clearInterval","formatCurrency","value","decimalPlaces","uintValue","decimals","decimalValue","Number","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","handleAddressChange","event","target","className","children","src","process","env","PUBLIC_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","map","entry","index","amount","Date","toLocaleString","href","trasactionHash","rel","_c","$RefreshReg$"],"sources":["F:/webtest/trade-activity-app/src/pages/Withdrawals.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css'; // You can define your own styling in this CSS file\r\nconst Withdrawals = () => {\r\n    \r\n    const [data, setData] = useState([]);\r\n    const [lastFetchTime, setLastFetchTime] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [inputAddress, setInputAddress] = useState('0x4c2b0B4Fff1bb49A94d66130e40771351319A751'); // Default address\r\n    \r\n    \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        setIsLoading(true); // Set loading state\r\n        try {\r\n          const response = await fetch(\r\n            `https://api.vela.exchange/graph/deposits/42161/${inputAddress}`\r\n          );\r\n          const jsonData = await response.json();\r\n  \r\n          if (lastFetchTime === null || jsonData[0]?.createdAt < lastFetchTime) {\r\n            setData(jsonData);\r\n            setLastFetchTime(jsonData[0]?.createdAt);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        } finally {\r\n          setIsLoading(false); // Clear loading state\r\n        }\r\n      }\r\n  \r\n      fetchData();\r\n    }, [inputAddress, lastFetchTime]); // Only inputAddress and lastFetchTime\r\n    \r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        setIsLoading(true); // Set loading state\r\n        try {\r\n          const apiUrl = `https://api.vela.exchange/graph/deposits/42161/${encodeURIComponent(inputAddress)}/`;\r\n          console.log('API URL:', apiUrl);\r\n      \r\n          const response = await fetch(apiUrl);\r\n          const jsonData = await response.json();\r\n          console.log('Fetched Data:', jsonData);\r\n      \r\n          if (lastFetchTime === null || jsonData[0]?.createdAt > lastFetchTime) {\r\n            setData(jsonData);\r\n            setLastFetchTime(jsonData[0]?.createdAt);\r\n          }\r\n  \r\n        \r\n         \r\n  \r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        } finally {\r\n          setIsLoading(false); // Clear loading state\r\n        }\r\n      }\r\n  \r\n      fetchData();\r\n      const interval = setInterval(fetchData, 30000); // Every 30 seconds\r\n  \r\n      return () => {\r\n        clearInterval(interval);\r\n      };\r\n    }, [data, inputAddress, lastFetchTime]);\r\n  \r\n   \r\n      const formatCurrency = (value, decimalPlaces) => {\r\n      const uintValue = value; // Assuming value is a string representing the UINT value\r\n      const decimals = 1e6; // This is the scale of the UINT values in your data\r\n      const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\r\n      \r\n      return new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: decimalPlaces,\r\n        maximumFractionDigits: decimalPlaces,\r\n      }).format(decimalValue * 1e-0); // Adjust for the desired decimal shift\r\n    };\r\n  \r\n    const handleAddressChange = (event) => {\r\n      setInputAddress(event.target.value);\r\n    };\r\n   \r\n  \r\n    return (\r\n      <div className=\"App\">\r\n       \r\n        <div className=\"header\">\r\n        \r\n        <div className=\"logo-container\">\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/logo.svg`}\r\n            alt=\"React Logo\"\r\n            className={`logo ${isLoading ? 'spin' : ''}`}\r\n          />\r\n        </div> \r\n        <h1>Withdrawals - </h1>\r\n        <input className='address-input'\r\n            type=\"text\"\r\n            value={inputAddress}\r\n            onChange={handleAddressChange}\r\n            placeholder=\"Enter an address\"\r\n          />\r\n          \r\n       \r\n        </div>\r\n        <table className={`table ${isLoading ? 'hidden' : ''}`}>\r\n          <thead>\r\n            <tr>\r\n              <th>Amount</th>\r\n              <th>Created At</th>\r\n              <th>TX</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((entry, index) => (\r\n              <tr key={index}>\r\n                <td>{formatCurrency(entry.amount, 2)}</td>\r\n              <td>{new Date(entry.createdAt * 1000).toLocaleString()}</td>\r\n              <td><a\r\n          href={`https://arbiscan.io/tx/${entry.trasactionHash}`}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {entry.trasactionHash}\r\n        </a></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        \r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default Withdrawals;\r\n  \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}