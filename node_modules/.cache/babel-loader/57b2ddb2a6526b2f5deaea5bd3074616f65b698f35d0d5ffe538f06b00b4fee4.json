{"ast":null,"code":"var _jsxFileName = \"F:\\\\webtest\\\\trade-activity-app\\\\src\\\\pages\\\\Home.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  var _s = $RefreshSig$();\n  function App() {\n    _s();\n    const [data, setData] = useState([]);\n    const [lastFetchTime, setLastFetchTime] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [inputAddress, setInputAddress] = useState('0x40988180c9cc5e7d0ac4e8055545b76a4470fe14'); // Default address\n    const [totalProfit, setTotalProfit] = useState(0); // New state for total profit\n\n    useEffect(() => {\n      async function fetchData() {\n        setIsLoading(true); // Set loading state\n        try {\n          var _jsonData$;\n          const response = await fetch(`https://api.vela.exchange/graph/trade_activities/42161/${inputAddress}`);\n          const jsonData = await response.json();\n          if (lastFetchTime === null || ((_jsonData$ = jsonData[0]) === null || _jsonData$ === void 0 ? void 0 : _jsonData$.createdAt) < lastFetchTime) {\n            var _jsonData$2;\n            setData(jsonData);\n            setLastFetchTime((_jsonData$2 = jsonData[0]) === null || _jsonData$2 === void 0 ? void 0 : _jsonData$2.createdAt);\n          }\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        } finally {\n          setIsLoading(false); // Clear loading state\n        }\n      }\n\n      fetchData();\n    }, [inputAddress, lastFetchTime]); // Only inputAddress and lastFetchTime\n\n    useEffect(() => {\n      async function fetchData() {\n        setIsLoading(true); // Set loading state\n        try {\n          var _jsonData$3;\n          const apiUrl = `https://api.vela.exchange/graph/trade_activities/42161/${encodeURIComponent(inputAddress)}/`;\n          console.log('API URL:', apiUrl);\n          const response = await fetch(apiUrl);\n          const jsonData = await response.json();\n          console.log('Fetched Data:', jsonData);\n          if (lastFetchTime === null || ((_jsonData$3 = jsonData[0]) === null || _jsonData$3 === void 0 ? void 0 : _jsonData$3.createdAt) > lastFetchTime) {\n            var _jsonData$4;\n            setData(jsonData);\n            setLastFetchTime((_jsonData$4 = jsonData[0]) === null || _jsonData$4 === void 0 ? void 0 : _jsonData$4.createdAt);\n          }\n\n          // Calculate total profit\n          const calculatedTotalProfit = data.reduce((total, activity) => {\n            return total + parseFloat(activity.profitLoss);\n          }, 0);\n          setTotalProfit(calculatedTotalProfit);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        } finally {\n          setIsLoading(false); // Clear loading state\n        }\n      }\n\n      fetchData();\n      const interval = setInterval(fetchData, 30000); // Every 30 seconds\n\n      return () => {\n        clearInterval(interval);\n      };\n    }, [data, inputAddress, lastFetchTime]);\n    const tokenLookup = {\n      1: 'BTC/USD',\n      2: 'ETH/USD',\n      3: 'LTC/USD',\n      4: 'ADA/USD',\n      5: 'DOGE/USD',\n      6: 'SHIB/USD',\n      7: 'ARB/USD',\n      8: 'SOL/USD',\n      9: 'MATIC/USD',\n      10: 'AVAX/USD',\n      11: 'GBP/USD',\n      12: 'EUR/USD',\n      13: 'USD/JPY',\n      14: 'AUD/USD',\n      15: 'USD/CAD',\n      24: 'XAG/USD',\n      25: 'XAU/USD',\n      26: 'USD/CNH',\n      27: 'USD/CHF',\n      28: 'USD/MXN',\n      30: 'USDT/USD',\n      31: 'ATOM/USD',\n      32: 'DOT/USD',\n      33: 'BNB/USD',\n      34: 'PEPE/USD',\n      35: 'XRP/USD',\n      36: 'CRV/USD',\n      38: 'OP/USD'\n      // Add more entries as needed\n    };\n\n    const formatCurrency = (value, decimalPlaces) => {\n      const uintValue = value; // Assuming value is a string representing the UINT value\n      const decimals = 1e18; // This is the scale of the UINT values in your data\n      const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\n\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: decimalPlaces,\n        maximumFractionDigits: decimalPlaces\n      }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\n    };\n\n    const toTitleCase = str => {\n      return str.split('_').map(word => word.charAt(0) + word.slice(1).toLowerCase()).join(' ');\n    };\n    const handleAddressChange = event => {\n      setInputAddress(event.target.value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${process.env.PUBLIC_URL}/logo.svg`,\n            alt: \"React Logo\",\n            className: `logo ${isLoading ? 'spin' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Trade Activities - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"address-input\",\n          type: \"text\",\n          value: inputAddress,\n          onChange: handleAddressChange,\n          placeholder: \"Enter an address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total-profit\",\n          children: [\"Total Profit: \", formatCurrency(totalProfit, 2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: `table ${isLoading ? 'hidden' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Average Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Token ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Collateral\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Created At\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Funding Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Borrow Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Is Long\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Is Win\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Is Plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mark Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pos ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Profit Loss\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Trade Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: toTitleCase(entry.actionType)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(entry.averagePrice, 6)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: tokenLookup[parseInt(entry.tokenId)]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(entry.collateral, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(entry.createdAt * 1000).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(entry.positionFee, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(entry.fundingFee, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(entry.borrowFee, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.isLong.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.isWin.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.isPlus.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(entry.markPrice, 6)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.posId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: entry.positionType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(entry.profitLoss, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatCurrency(entry.tradeVolume, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }, this);\n  }\n  _s(App, \"1nG8b31dKYtzsfeUVERLOpmIhpk=\");\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Home","_s","$RefreshSig$","App","data","setData","useState","lastFetchTime","setLastFetchTime","isLoading","setIsLoading","inputAddress","setInputAddress","totalProfit","setTotalProfit","useEffect","fetchData","_jsonData$","response","fetch","jsonData","json","createdAt","_jsonData$2","error","console","_jsonData$3","apiUrl","encodeURIComponent","log","_jsonData$4","calculatedTotalProfit","reduce","total","activity","parseFloat","profitLoss","interval","setInterval","clearInterval","tokenLookup","formatCurrency","value","decimalPlaces","uintValue","decimals","decimalValue","Number","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","toTitleCase","str","split","map","word","charAt","slice","toLowerCase","join","handleAddressChange","event","target","_jsxDEV","className","children","src","process","env","PUBLIC_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","entry","index","actionType","averagePrice","parseInt","tokenId","collateral","Date","toLocaleString","positionFee","fundingFee","borrowFee","isLong","toString","isWin","isPlus","markPrice","posId","positionType","tradeVolume","_c","$RefreshReg$"],"sources":["F:/webtest/trade-activity-app/src/pages/Home.js"],"sourcesContent":["const Home = () => {\r\n   \r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [lastFetchTime, setLastFetchTime] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [inputAddress, setInputAddress] = useState('0x40988180c9cc5e7d0ac4e8055545b76a4470fe14'); // Default address\r\n  const [totalProfit, setTotalProfit] = useState(0); // New state for total profit\r\n  \r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setIsLoading(true); // Set loading state\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.vela.exchange/graph/trade_activities/42161/${inputAddress}`\r\n        );\r\n        const jsonData = await response.json();\r\n\r\n        if (lastFetchTime === null || jsonData[0]?.createdAt < lastFetchTime) {\r\n          setData(jsonData);\r\n          setLastFetchTime(jsonData[0]?.createdAt);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setIsLoading(false); // Clear loading state\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, [inputAddress, lastFetchTime]); // Only inputAddress and lastFetchTime\r\n  \r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setIsLoading(true); // Set loading state\r\n      try {\r\n        const apiUrl = `https://api.vela.exchange/graph/trade_activities/42161/${encodeURIComponent(inputAddress)}/`;\r\n        console.log('API URL:', apiUrl);\r\n    \r\n        const response = await fetch(apiUrl);\r\n        const jsonData = await response.json();\r\n        console.log('Fetched Data:', jsonData);\r\n    \r\n        if (lastFetchTime === null || jsonData[0]?.createdAt > lastFetchTime) {\r\n          setData(jsonData);\r\n          setLastFetchTime(jsonData[0]?.createdAt);\r\n        }\r\n\r\n      \r\n        // Calculate total profit\r\n        const calculatedTotalProfit = data.reduce((total, activity) => {\r\n          return total + parseFloat(activity.profitLoss);\r\n        }, 0);\r\n        setTotalProfit(calculatedTotalProfit);\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      } finally {\r\n        setIsLoading(false); // Clear loading state\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n    const interval = setInterval(fetchData, 30000); // Every 30 seconds\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [data, inputAddress, lastFetchTime]);\r\n\r\n  const tokenLookup = {\r\n    1: 'BTC/USD',\r\n    2: 'ETH/USD',\r\n    3: 'LTC/USD',\r\n    4: 'ADA/USD',\r\n    5: 'DOGE/USD',\r\n    6: 'SHIB/USD',\r\n    7: 'ARB/USD',\r\n    8: 'SOL/USD',\r\n    9: 'MATIC/USD',\r\n    10: 'AVAX/USD',\r\n    11: 'GBP/USD',\r\n    12: 'EUR/USD',\r\n    13: 'USD/JPY',\r\n    14: 'AUD/USD',\r\n    15: 'USD/CAD',\r\n    24: 'XAG/USD',\r\n    25: 'XAU/USD',\r\n    26: 'USD/CNH',\r\n    27: 'USD/CHF',\r\n    28: 'USD/MXN',\r\n    30: 'USDT/USD',\r\n    31: 'ATOM/USD',\r\n    32: 'DOT/USD',\r\n    33: 'BNB/USD',\r\n    34: 'PEPE/USD',\r\n    35: 'XRP/USD',\r\n    36: 'CRV/USD',\r\n    38: 'OP/USD',\r\n    // Add more entries as needed\r\n  };\r\n\r\n    const formatCurrency = (value, decimalPlaces) => {\r\n    const uintValue = value; // Assuming value is a string representing the UINT value\r\n    const decimals = 1e18; // This is the scale of the UINT values in your data\r\n    const decimalValue = Number(uintValue) / decimals; // Convert UINT to decimal\r\n    \r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: decimalPlaces,\r\n      maximumFractionDigits: decimalPlaces,\r\n    }).format(decimalValue * 1e-12); // Adjust for the desired decimal shift\r\n  };\r\n\r\n  const toTitleCase = (str) => {\r\n    return str\r\n      .split('_')\r\n      .map((word) => word.charAt(0) + word.slice(1).toLowerCase())\r\n      .join(' ');\r\n  };\r\n\r\n  const handleAddressChange = (event) => {\r\n    setInputAddress(event.target.value);\r\n  };\r\n \r\n\r\n  return (\r\n    <div className=\"App\">\r\n     \r\n      <div className=\"header\">\r\n      \r\n      <div className=\"logo-container\">\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/logo.svg`}\r\n          alt=\"React Logo\"\r\n          className={`logo ${isLoading ? 'spin' : ''}`}\r\n        />\r\n      </div> \r\n      <h1>Trade Activities - </h1>\r\n      <input className='address-input'\r\n          type=\"text\"\r\n          value={inputAddress}\r\n          onChange={handleAddressChange}\r\n          placeholder=\"Enter an address\"\r\n        />\r\n        <div className=\"total-profit\">Total Profit: {formatCurrency(totalProfit, 2)}</div> {/* Display total profit */}\r\n     \r\n      </div>\r\n      <table className={`table ${isLoading ? 'hidden' : ''}`}>\r\n        <thead>\r\n          <tr>\r\n            <th>Action Type</th>\r\n            <th>Average Price</th>\r\n            <th>Token ID</th>\r\n            <th>Collateral</th>\r\n            <th>Created At</th>\r\n            <th>Position Fee</th>\r\n            <th>Funding Fee</th>\r\n            <th>Borrow Fee</th>\r\n            <th>Is Long</th>\r\n            <th>Is Win</th>\r\n            <th>Is Plus</th>\r\n            <th>Mark Price</th>\r\n            <th>Pos ID</th>\r\n            <th>Position Type</th>\r\n            <th>Profit Loss</th>\r\n            <th>Trade Volume</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((entry, index) => (\r\n            <tr key={index}>\r\n              <td>{toTitleCase(entry.actionType)}</td>\r\n              <td>{formatCurrency(entry.averagePrice, 6)}</td>\r\n              <td>{tokenLookup[parseInt(entry.tokenId)]}</td>\r\n              <td>{formatCurrency(entry.collateral, 2)}</td>\r\n              <td>{new Date(entry.createdAt * 1000).toLocaleString()}</td>\r\n              <td>{formatCurrency(entry.positionFee, 2)}</td>\r\n              <td>{formatCurrency(entry.fundingFee, 2)}</td>\r\n              <td>{formatCurrency(entry.borrowFee, 2)}</td>\r\n              <td>{entry.isLong.toString()}</td>\r\n              <td>{entry.isWin.toString()}</td>\r\n              <td>{entry.isPlus.toString()}</td>\r\n              <td>{formatCurrency(entry.markPrice, 6)}</td>\r\n              <td>{entry.posId}</td>\r\n              <td>{entry.positionType}</td>\r\n              <td>{formatCurrency(entry.profitLoss, 2)}</td>\r\n              <td>{formatCurrency(entry.tradeVolume, 2)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n  };\r\n  \r\n  export default Home;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}